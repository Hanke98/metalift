#INFO: { "loopvars": ["k", "j"], "inputs": [["density0", "double[_N*_N]"], ["dt", "double"], ["nodal_mass", "double"],["nodal_mass_out", "double"], ["stepbymass", "double[_N*_N]"], ["volume", "double[_N*_N]"], ["x_max", "int"], ["x_min", "int"], ["y_max", "int"], ["y_min", "int"], ["__float__0_25", "double"], ["__float__0_5", "double"]] }

k = y_min
while {k, (k < (y_max + 1))}
{
j = x_min
while {j, (j < (x_max + 1))}
{
nodal_mass = (((((density0[((j - 1) + (((x_max + 2) - (x_min - 2)) * (k - 1)))] * volume[((j - 1) + (((x_max + 2) - (x_min - 2)) * (k - 1)))]) + (density0[(j + (((x_max + 2) - (x_min - 2)) * (k - 1)))] * volume[(j + (((x_max + 2) - (x_min - 2)) * (k - 1)))])) + (density0[(j + (((x_max + 2) - (x_min - 2)) * k))] * volume[(j + (((x_max + 2) - (x_min - 2)) * k))])) + (density0[((j - 1) + (((x_max + 2) - (x_min - 2)) * k))] * volume[((j - 1) + (((x_max + 2) - (x_min - 2)) * k))])) * __float__0_25)
stepbymass[(j + (((x_max + 3) - (x_min - 2)) * k))] = ((__float__0_5 * dt) / nodal_mass)
j = (j + 1)
}


k = (k + 1)
}

